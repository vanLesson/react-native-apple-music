{"version":3,"file":"use-current-song.js","sources":["../../src/hooks/use-current-song.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Player from '../modules/player';\nimport type { IPlaybackState } from '../types/playback-state';\nimport type { ISong } from '../types/song';\n\n/**\n * A hook to track the currently playing song from Apple Music.\n * It listens for changes from the native music player and updates the `currentSong` state accordingly.\n *\n * @returns {{ song?: ISong; error?: Error }} The `song` state indicating the current song details or null if no song is playing.\n */\nconst useCurrentSong = (): { song?: ISong; error?: Error } => {\n  const [currentSong, setCurrentSong] = useState<ISong>();\n  const [error, setError] = useState<Error>();\n\n  useEffect(() => {\n    Player.getCurrentState()\n      .then((state) => setCurrentSong(state.currentSong))\n      .catch(setError);\n\n    const listener = Player.addListener('onCurrentSongChange', (state: IPlaybackState) => {\n      setError(undefined);\n      setCurrentSong(state?.currentSong);\n    });\n\n    return () => listener.remove();\n  }, []);\n\n  return { song: currentSong, error };\n};\n\nexport default useCurrentSong;\n"],"names":[],"mappings":";;;AAKA;;;;;AAKG;AACG,MAAA,cAAc,GAAG,MAAsC;IAC3D,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,EAAS,CAAC;IACxD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,EAAS,CAAC;IAE5C,SAAS,CAAC,MAAK;QACb,MAAM,CAAC,eAAe,EAAE;AACrB,aAAA,IAAI,CAAC,CAAC,KAAK,KAAK,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;aAClD,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEnB,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC,KAAqB,KAAI;YACnF,QAAQ,CAAC,SAAS,CAAC,CAAC;AACpB,YAAA,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACrC,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAC;KAChC,EAAE,EAAE,CAAC,CAAC;AAEP,IAAA,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;AACtC;;;;"}